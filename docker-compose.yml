version: '3.8'

services:
  frontend:
    build:
      context: ./admin-dashboard-front
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./AdminDashboardServer/AdminDashboardServer
      dockerfile: Dockerfile
    container_name: aspnet-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__RegisterDbContext=Host=db;Port=5432;Database=dashboard;Username=postgres;Password=123
    ports:
      - "5000:8080" 
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: dashboard
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
